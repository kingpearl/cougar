#!/usr/bin/env bash
##
# Pearl Bootstrap
# Copyright(c) 2022 King Pearl LLC
##
mkdir -p /var/tmp && cd /var/tmp/

ME=$(whoami)
PKG=profile
if [ ! -f .installed-$PKG ];
then
sudo locale-gen en_US.UTF-8
touch .installed-$PKG
fi

# echo "System enable/start bluebooth"
# sudo systemctl enable bluetooth.service
# sudo systemctl start bluetooth.service

echo "Pacman update"
sudo pacman -Syyu --noconfirm

PKG=curl
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Curl"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

PKG=git
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Git"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

# Set permissions
PKG=permissions
if [ ! -f .installed-$PKG ];
then
echo "Set $PKG"
chmod 700 ~/.ssh
chmod 600 ~/.ssh/*
touch .installed-$PKG
fi

# Create workspace
PKG=workspace
if [ ! -f .installed-$PKG ];
then
echo "Create $PKG"
mkdir -p ~/.vim/{backups,bundle,swaps,undo}
# mkdir -p ~/Projects
# mkdir -p ~/Machines
touch .installed-$PKG
fi

PKG=intel-ucode
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Intel Microcode"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

PKG=make-gcc-ssl
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Make & GCC & SSL"
sudo pacman -S --noconfirm --needed base-devel openssl && touch .installed-$PKG
fi

# PKG=python
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Python"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=go
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Go"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

PKG=rust
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Rust"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

PKG=nodejs-lts-gallium
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Node"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

# PKG=deno
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Deno"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=jdk8-openjdk
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install OpenJDK"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

PKG=paru
if [ ! -f .installed-$PKG ];
then
echo "Install Paru"
git clone https://aur.archlinux.org/paru.git && cd paru && makepkg -si && cd ../ && rm -fR paru && touch .installed-$PKG
fi

PKG=libarchive
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Tar"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

# PKG=exfat
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install exFat"
# sudo pacman -S --noconfirm --needed exfatprogs exfat-utils && touch .installed-$PKG
# fi

# PKG=winehq
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install WineHQ"
# sudo pacman -S --noconfirm --needed wine winetricks && touch .installed-$PKG
# fi

# PKG=aspell
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Aspell"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=the_silver_searcher
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install The Silver Searcher"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=git-extras
# if [ ! -f .installed-$PKG ];
# then
# echo "Install $PKG"
# mkdir -p $PKG && curl -sL https://github.com/visionmedia/$PKG/archive/master.tar.gz | tar -xz --strip 1 -C $PKG && cd $PKG && sudo make install && cd ../ && rm -fR $PKG && touch .installed-$PKG
# fi

# PKG=git-flow
# if [ ! -f .installed-$PKG ];
# then
# echo "Install Git Flow"
# wget --no-check-certificate -q https://raw.github.com/petervanderdoes/gitflow/develop/contrib/gitflow-installer.sh && chmod +x gitflow-installer.sh && sudo ./gitflow-installer.sh install stable && rm -fr gitflow* && touch .installed-$PKG
# fi

# PKG=burl
# if [ ! -f .installed-$PKG ];
# then
# echo "Install $PKG"
# mkdir -p $PKG && curl -sL https://github.com/visionmedia/$PKG/archive/master.tar.gz | tar -xz --strip 1 -C $PKG && cd $PKG && sudo make install && cd ../ && rm -fR $PKG && touch .installed-$PKG
# fi

# PKG=clib
# if [ ! -f .installed-$PKG ];
# then
# echo "Install $PKG"
# sudo pacman -S --noconfirm --needed libcurl-gnutls
# mkdir -p $PKG && curl -sL https://github.com/clibs/$PKG/archive/master.tar.gz | tar -xz --strip 1 -C $PKG && cd $PKG && sudo make install && cd ../ && rm -fR $PKG && touch .installed-$PKG
# fi

# PKG=every
# if [ ! -f .installed-$PKG ];
# then
# echo "Install $PKG"
# mkdir -p $PKG && curl -sL https://github.com/visionmedia/$PKG/archive/master.tar.gz | tar -xz --strip 1 -C $PKG && cd $PKG && sudo make install && cd ../ && rm -fR $PKG && touch .installed-$PKG
# fi

# PKG=flash
# if [ ! -f .installed-$PKG ];
# then
# echo "Install $PKG"
# mkdir -p $PKG && curl -sL https://github.com/kingpearl/$PKG/archive/master.tar.gz | tar -xz --strip 1 -C $PKG && cd $PKG && sudo make install && cd ../ && rm -fR $PKG && touch .installed-$PKG
# fi

# PKG=mon
# if [ ! -f .installed-$PKG ];
# then
# echo "Install $PKG"
# mkdir -p $PKG && curl -sL https://github.com/visionmedia/$PKG/archive/master.tar.gz | tar -xz --strip 1 -C $PKG && cd $PKG && sudo make install && cd ../ && rm -fR $PKG && touch .installed-$PKG
# fi

# PKG=mad
# if [ ! -f .installed-$PKG ];
# then
# echo "Install $PKG"
# mkdir -p $PKG && curl -sL https://github.com/visionmedia/$PKG/archive/master.tar.gz | tar -xz --strip 1 -C $PKG && cd $PKG && sudo make install && cd ../ && rm -fR $PKG && touch .installed-$PKG
# fi

# PKG=zsh
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Zsh"
# sudo pacman -S --noconfirm --needed $PKG && sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" && touch .installed-$PKG
# fi

# PKG=fish
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Fish"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

PKG=vim
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Vim"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

PKG=vundle
if [ ! -f .installed-$PKG ];
then
echo "Install Vundle"
git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
vim +PluginInstall +qall
echo "colorscheme base16-spacemacs" >> ~/.vimrc
touch .installed-$PKG
fi

# PKG=emacs
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Emacs"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=spacemacs
# if [ ! -f .installed-$PKG ];
# then
# echo "Install Spacemacs"
# git clone https://github.com/syl20bnr/$PKG ~/.emacs.d
# touch .installed-$PKG
# fi

PKG=htop
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Htop"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

# PKG=jpegoptim
# if [ ! -f .installed-$PKG ];
# then
# echo "Apt install Jpegoptim"
# sudo pacman -S --noconfirm --needed $PKG
# fi

# PKG=optipng
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install OptiPNG"
# sudo pacman -S --noconfirm --needed $PKG
# fi

# PKG=mutt
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Mutt"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=lynx
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Lynx"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=newsboat
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Newsboat"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=openvpn
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install OpenVPN"
# sudo pacman -S --noconfirm --needed $PKG networkmanager-$PKG && touch .installed-$PKG
# fi

# PKG=openconnect
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install OpenConnect"
# sudo pacman -S --noconfirm --needed $PKG networkmanager-$PKG && touch .installed-$PKG
# fi

# PKG=stoken
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install stoken"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

PKG=npm
if [ ! -f .installed-$PKG ];
then
echo "Pacman install NPM"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

# PKG=psy
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install psy"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=now
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install Now"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=yarn
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install Yarn"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=bower
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install Bower"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=browserify
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install Browserify"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=duo
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install Duo"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=webpack
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install $PKG"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=create-react-app
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install Create React App"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=create-react-native-app
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install Create React Native App"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=react-native-cli
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install React Native CLI"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=particle-cli
# if [ ! -f .installed-$PKG ];
# then
# echo "NPM install Particle"
# sudo npm install -g $PKG && touch .installed-$PKG
# fi

# PKG=postgresql
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install PostgreSQL"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=mongodb-bin
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install MongoDB"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=redis
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Redis"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

PKG=docker
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Docker"
sudo pacman -S --noconfirm --needed $PKG
# sudo systemctl enable docker.service
# sudo systemctl start docker.service
# sudo systemctl enable containerd.service
# sudo systemctl start containerd.service
touch .installed-$PKG
fi

PKG=kvm
if [ ! -f .installed-$PKG ];
then
echo "Pacman install KVM"
sudo pacman -S --noconfirm --needed qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat edk2-ovmf dmidecode
sudo usermod -aG libvirt $USER
sudo systemctl enable systemd-resolved.service
sudo systemctl start systemd-resolved.service
# sudo systemctl enable libvirtd.service
# sudo systemctl start libvirtd.service
# sudo virsh net-start default
# sudo virsh net-autostart default
touch .installed-$PKG
fi

# PKG=terraform
# if [ ! -f .installed-$PKG ];
# then
# echo "Install Terraform"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=up
# if [ ! -f .installed-$PKG ];
# then
# echo "Install Apex"
# curl https://raw.githubusercontent.com/apex/up/master/install.sh | bash
# touch .installed-$PKG
# fi

# PKG=consul-bin
# if [ ! -f .installed-$PKG ];
# then
# echo "Install Consul"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

PKG=papirus-icon-theme
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Papirus Icon Theme"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

PKG=gnome-shell-extensions
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Gnome Shell Extensions"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

PKG=gnome-themes-extra
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Gnome Themes Extra"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

PKG=gnome-tweaks
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Gnome Tweaks"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

# PKG=flatpak
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Flatpak"
# sudo pacman -S --noconfirm --needed $PKG && sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo && touch .installed-$PKG
# fi

# PKG=android-studio
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install Android Studio"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

PKG=visual-studio-code-bin
if [ ! -f .installed-$PKG ];
then
echo "Paru install Visual Studio Code"
paru -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

# PKG=datagrip-jre
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install Datagrip"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=postman-bin
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install Postman"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi


PKG=firefox
if [ ! -f .installed-$PKG ];
then
echo "Pacman install Firefox"
sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

PKG=google-chrome
if [ ! -f .installed-$PKG ];
then
echo "Paru install Google Chrome"
paru -S --noconfirm --needed $PKG && touch .installed-$PKG
fi

# PKG=evolution
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Evolution"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=slack-desktop
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install Slack"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=teams
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install Microsoft Teams"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=zoom
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install Zoom"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=gimp
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Gimp"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=spotify
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install Spotify"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=steam
# if [ ! -f .installed-$PKG ];
# then
# echo "Paru install Steam"
# paru -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi

# PKG=lutris
# if [ ! -f .installed-$PKG ];
# then
# echo "Pacman install Lutris"
# sudo pacman -S --noconfirm --needed $PKG && touch .installed-$PKG
# fi